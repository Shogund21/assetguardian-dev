import { serve } from "https://deno.land/std@0.168.0/http/server.ts";
import { Resend } from "npm:resend@2.0.0";
import { createClient } from "https://esm.sh/@supabase/supabase-js@2.50.0";

const resend = new Resend(Deno.env.get("RESEND_API_KEY"));
const supabaseUrl = Deno.env.get('SUPABASE_URL')!;
const supabaseKey = Deno.env.get('SUPABASE_SERVICE_ROLE_KEY')!;

const supabase = createClient(supabaseUrl, supabaseKey);

const corsHeaders = {
  "Access-Control-Allow-Origin": "*",
  "Access-Control-Allow-Headers": "authorization, x-client-info, apikey, content-type",
};

interface Message {
  role: string;
  content: string;
  timestamp: string;
}

interface VisitorInfo {
  name?: string;
  email?: string;
  company?: string;
  phone?: string;
}

const handler = async (req: Request): Promise<Response> => {
  if (req.method === "OPTIONS") {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { sessionId, visitorInfo, conversation, timestamp } = await req.json();

    console.log('Sending lead email:', { sessionId, visitorInfo });

    // Format conversation for email
    const conversationText = conversation
      .map((msg: Message) => `${msg.role.toUpperCase()}: ${msg.content}`)
      .join('\n\n');

    // Prepare visitor summary
    const visitorSummary = `
Name: ${visitorInfo.name || 'Not provided'}
Email: ${visitorInfo.email || 'Not provided'}
Company: ${visitorInfo.company || 'Not provided'}
Phone: ${visitorInfo.phone || 'Not provided'}
    `.trim();

    const emailHtml = `
      <h2>New Lead from Asset Guardian Website</h2>
      
      <h3>Visitor Information:</h3>
      <pre>${visitorSummary}</pre>
      
      <h3>Chat Session Details:</h3>
      <p><strong>Session ID:</strong> ${sessionId}</p>
      <p><strong>Date:</strong> ${new Date(timestamp).toLocaleString()}</p>
      
      <h3>Conversation Transcript:</h3>
      <div style="background-color: #f5f5f5; padding: 15px; border-radius: 5px; white-space: pre-wrap; font-family: monospace;">
${conversationText}
      </div>
      
      <hr>
      <p><em>This lead was automatically generated by the Asset Guardian chatbot system.</em></p>
    `;

    const emailResponse = await resend.emails.send({
      from: "Asset Guardian Bot <onboarding@resend.dev>",
      to: ["dixon.shogun@gmail.com"],
      subject: `New Lead: ${visitorInfo.name || 'Visitor'} from ${visitorInfo.company || 'Unknown Company'}`,
      html: emailHtml,
    });

    console.log("Lead email sent successfully:", emailResponse);

    // Update the chat session to mark email as sent
    await supabase
      .from('chat_sessions')
      .update({ email_sent: true })
      .eq('session_id', sessionId);

    return new Response(JSON.stringify({ 
      success: true, 
      emailId: emailResponse.data?.id 
    }), {
      status: 200,
      headers: {
        "Content-Type": "application/json",
        ...corsHeaders,
      },
    });

  } catch (error: any) {
    console.error("Error in send-lead-email function:", error);
    return new Response(
      JSON.stringify({ 
        error: error.message,
        success: false 
      }),
      {
        status: 500,
        headers: { "Content-Type": "application/json", ...corsHeaders },
      }
    );
  }
};

serve(handler);